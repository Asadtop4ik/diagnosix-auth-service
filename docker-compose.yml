services:
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - app-network

  db:
    image: postgres:15
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  migration:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
    command: ["alembic", "upgrade", "head"]
    networks:
      - app-network

  test:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    depends_on:
      - db
    command: [ "pytest", "-v" ]
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge